buildscript {
    ext.kotlin_version = '1.3.11'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
}

apply plugin: "maven-publish"
apply plugin: "java-library"
apply plugin: 'org.jetbrains.dokka'

group 'de.debuglevel.odbjdbc'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.6.22'
    
    // Logging
    // see http://saltnlight5.blogspot.com/2013/08/how-to-configure-slf4j-with-different.html for a quick introduction to slf4j
    //compile 'io.github.microutils:kotlin-logging:1.6.22'
    //compile 'org.slf4j:slf4j-api:1.7.25'
    //compile 'org.slf4j:slf4j-simple:1.7.25'

    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        javaMaven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
